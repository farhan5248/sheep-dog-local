dependencies {
	api project(':org.xtext.example.mydsl')
	api "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
	api "org.eclipse.xtext:org.eclipse.xtext.xbase.ide:${xtextVersion}"
	// LSP4J dependencies for Language Server Protocol support
	api "org.eclipse.lsp4j:org.eclipse.lsp4j:0.22.0"
	api "org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.22.0"
}

apply plugin: 'application'
apply plugin: 'distribution'

application {
	mainClass = "org.xtext.example.mydsl.ide.MyDslServerLauncher"
	applicationName = "mydsl-language-server"
}

// Create a custom fat JAR task instead of modifying the default jar task
task fatJar(type: Jar) {
	dependsOn configurations.runtimeClasspath
	archiveBaseName = 'mydsl-language-server'
	archiveClassifier = 'standalone'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes 'Main-Class': application.mainClass
	}
	from sourceSets.main.output
	from {
		configurations.runtimeClasspath.collect { 
			it.isDirectory() ? it : zipTree(it)
		}
	}
	exclude 'META-INF/*.SF'
	exclude 'META-INF/*.DSA'
	exclude 'META-INF/*.RSA'
}

// Distribution configuration for standalone deployment
distributions {
	main {
		distributionBaseName = 'mydsl-language-server'
		contents {
			from(fatJar)
			from("scripts") {
				fileMode = 0755
			}
		}
	}
}

